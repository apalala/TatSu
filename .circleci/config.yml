# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2

workflows:
  version: 2
  test:
    jobs:
      - test-3.8

jobs:
  test-3.8:  &test-template
    docker:
      - image: circleci/python:3.8


    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements-test.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            sudo apt update
            sudo apt install -y python-pip
            sudo apt install -y virtualenv
            sudo apt install -y pandoc
            sudo apt install -y graphviz
            python -m venv venv || virtualenv venv
            . venv/bin/activate
            pip install -U pip
            pip install -Ur requirements-test.txt

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements-test.txt" }}

      - run:
          name: run tests
          command: |
            . venv/bin/activate
            flake8
            pylint --ignore=bootstrap.py,model.py tatsu test examples
            mypy   --ignore-missing-imports .
            pytest -v

      - run:
          name: package
          command: |
              python setup.py sdist --formats=zip
              python setup.py bdist_wheel --universal

      - store_artifacts:
          path: test-reports
          destination: test-reports

  test-pypy3  :
    docker:
      - image: circleci/python:3.8

    working_directory: ~/repo-pypy3

    steps:
      - checkout

      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements-test.txt" }}
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            sudo apt update
            sudo apt install -y python3-pip
            sudo apt install -y python3-dev
            sudo apt install -y virtualenv
            sudo apt install -y pypy3
            sudo apt install -y pandoc
            sudo apt install -y graphviz
            virtualenv venv -p pypy3
            . venv/bin/activate
            pip install -U pip
            pip install -Ur requirements-test.txt

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements-test.txt" }}

      - run:
          name: run tests
          command: |
            . venv/bin/activate
            pytest -v

      - store_artifacts:
          path: test-reports
          destination: test-reports
